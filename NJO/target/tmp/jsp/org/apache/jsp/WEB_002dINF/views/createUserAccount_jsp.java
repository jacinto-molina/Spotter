/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.43.v20210629
 * Generated at: 2021-12-01 01:41:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class createUserAccount_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\r\n");
      out.write("   \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("\r\n");
      out.write("<html ng-app=\"App\"> \r\n");
      out.write("    <head>\r\n");
      out.write("    \t<script type=\"text/javascript\" src=\"https://code.angularjs.org/1.8.2/angular.js\"></script>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<script type=\"text/javascript\" src=\"resources/static/js/app.HttpAPIFactory.js\"></script>\r\n");
      out.write("\t\t<script type=\"text/javascript\" src=\"resources/static/js/app.CreateUser.js\"></script>\r\n");
      out.write("  \r\n");
      out.write("        <script type=\"text/javascript\" src=\"resources/static/js/app.MenuButtons.js\"></script>\r\n");
      out.write("    \t\r\n");
      out.write("    \r\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("        <link href=\"../resources/style.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("        \r\n");
      out.write("        <div id=\"menu\" ng-controller=\"MenuButton as vm\">\r\n");
      out.write("\t        <ul>\r\n");
      out.write("\t        \t<li id=\"idid\"><form action=\"/\"  id=\"formid\"><button ng-click=\"vm.homeButton('Home Clicked')\" id=\"buttons\">Home</button></form></li>\r\n");
      out.write("\t       \t \t<li id=\"idid\"><form  action=\"about\" id=\"formid\"><button ng-click=\"vm.aboutButton('About Clicked')\" id=\"buttons\">About</button></form></li>\r\n");
      out.write("\t        \t<li id=\"idid\"><form action=\"workouts\"  id=\"formid\"><button ng-click=\"vm.workoutsButton('Workout Clicked')\" id=\"buttons\">Workouts</button></form></li>\r\n");
      out.write("\t        \t<li id=\"idid\"><form action=\"setting\"  id=\"formid\"><button ng-click=\"vm.settingButton('Setting Clicked')\" id=\"buttons\">Setting</button></form></li>\r\n");
      out.write("\t        \t<li id=\"idid\"><form action=\"login\"  id=\"formid\"><button ng-click=\"vm.loginButton('Login Clicked')\" id=\"buttons\">Login</button></form></li>\r\n");
      out.write("\t  \r\n");
      out.write("\t        </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("    </head>\r\n");
      out.write("    <body id=\"createbody\">\r\n");
      out.write("    \t<div style=\"background-color: black;width:2000px;height:10px;margin-top:5px;margin-left:-20px;\"></div>\r\n");
      out.write("        <h1 id=\"goldTextTitle\" style=\"border:5px solid black;\">Create your Account</h1>\r\n");
      out.write("        <form id=\"createAcc\" action=\"/\" method=\"get\">\r\n");
      out.write("        \t<div id=\"createDiv\" style=\"width:800px\" >\r\n");
      out.write("        \t\t<div style=\"width:300px;height:300px;background-color: black;\" ng-controller=\"CreateUserController as vm\">\r\n");
      out.write("        \t\t<ul>\r\n");
      out.write("        \t\t\t<li id=\"createF\"><label for=\"fname\">First Name:</label>\r\n");
      out.write("\t\t\t        \t<input type=\"text\" id=\"fname\" name=\"fname\" ng-model=\"vm.firstname\" value=\"\" required><br></li>\r\n");
      out.write("\t\t        \t<li id=\"createF\"><label for=\"lname\">Last Name:</label>\r\n");
      out.write("\t\t        \t\t<input type=\"text\" id=\"lname\" name=\"lname\" ng-model=\"vm.lastname\" value=\"\" required><br></li>\r\n");
      out.write("\t        \t\t<li id=\"createF\"><label for=\"ename\" style=\"padding-left:32px\">Email:</label>\r\n");
      out.write("\t\t        \t\t<input type=\"text\" id=\"ename\" name=\"ename\" ng-model=\"vm.email\" value=\"\" required><br></li>\r\n");
      out.write("\t        \t\t<li id=\"createF\"><label for=\"password\" style=\"padding-left:8px\">Password:</label>\r\n");
      out.write("\t\t        \t\t<input type=\"password\" id=\"password\" name=\"password\" ng-model=\"vm.password\" value=\"\" required><br></li>\r\n");
      out.write("\t        \t\r\n");
      out.write("\t        \t\t<li id=\"createF\" style=\"padding-left:30px\"><label for=\"height\">Height</label>\r\n");
      out.write("\t        \t\t\t<select id=\"selectFeet\" value=\"5\" ng-model=\"vm.selectFeet\" name=\"selectFeet\">\r\n");
      out.write("\t        \t\t\t\t<option>4</option>\r\n");
      out.write("\t        \t\t\t\t<option>5</option>\r\n");
      out.write("\t        \t\t\t\t<option>6</option>\r\n");
      out.write("\t        \t\t\t\t<option>7</option>\r\n");
      out.write("\t        \t\t\t</select>\r\n");
      out.write("\t        \t\t\t<select id=\"selectInch\" value=\"0\" ng-model=\"vm.selectInch\" name=\"selectInch\">\r\n");
      out.write("\t        \t\t\t\t<option>0</option>\r\n");
      out.write("\t        \t\t\t\t<option>1</option>\r\n");
      out.write("\t        \t\t\t\t<option>2</option>\r\n");
      out.write("\t        \t\t\t\t<option>3</option>\r\n");
      out.write("\t        \t\t\t\t<option>4</option>\r\n");
      out.write("\t        \t\t\t\t<option>5</option>\r\n");
      out.write("\t        \t\t\t\t<option>6</option>\r\n");
      out.write("\t        \t\t\t\t<option>7</option>\r\n");
      out.write("\t        \t\t\t\t<option>8</option>\r\n");
      out.write("\t        \t\t\t\t<option>9</option>\r\n");
      out.write("\t        \t\t\t</select>\r\n");
      out.write("\t        \t\t</li>\r\n");
      out.write("\t        \t\t<li id=\"createF\"><label for=\"weight\" style=\"padding-left:22px\">Weight:</label>\r\n");
      out.write("\t\t        \t\t<input type=\"number\" id=\"weight\" min=0 value=\"100\" ng-model='vm.weight' name=\"weight\" value=0 ><br></li>\r\n");
      out.write("\t        \t</ul>\r\n");
      out.write("\t        \t<form ><button ng-click=\"vm.CAOnClick()\" style=\"margin-left:117px;width: 40%;\">Create Account</button> </form>\r\n");
      out.write("        \t\t</div>\r\n");
      out.write("        \t</div>\r\n");
      out.write("        </form>\r\n");
      out.write("        <div style=\"background-color: black;width:2000px;height:10px;margin-top:5px;margin-left:-20px;\"></div>\r\n");
      out.write("        \r\n");
      out.write("    </body>\r\n");
      out.write("</html>\r\n");
      out.write("e");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
